{
    "models": [
        {
            "classname": "Walker",
            "code": "class Walker(Base):\n    \"\"\"\n    description: Represents a dog walker who registers and provides services.\n    \"\"\"\n\n    __tablename__ = 'walker'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    first_name = Column(String, nullable=False)\n    last_name = Column(String, nullable=False)\n    postal_code = Column(String, nullable=False)\n    phone = Column(String, nullable=False)\n    email = Column(String, nullable=False)\n    max_dogs_per_walk = Column(Integer, nullable=False)\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Represents a dog walker who registers and provides services.",
            "name": "Walker"
        },
        {
            "classname": "WalkerAvailability",
            "code": "class WalkerAvailability(Base):\n    \"\"\"\n    description: Records the days of the week and times a walker is available.\n    \"\"\"\n\n    __tablename__ = 'walker_availability'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    walker_id = Column(Integer, ForeignKey('walker.id'), nullable=False)\n    day_of_week = Column(String(10), nullable=False)\n    time_of_day = Column(String(10), nullable=False)  # morning or afternoon\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Records the days of the week and times a walker is available.",
            "name": "WalkerAvailability"
        },
        {
            "classname": "WalkerRate",
            "code": "class WalkerRate(Base):\n    \"\"\"\n    description: Sets the price for walks based on dog size and duration.\n    \"\"\"\n\n    __tablename__ = 'walker_rate'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    walker_id = Column(Integer, ForeignKey('walker.id'), nullable=False)\n    dog_size = Column(String(10), nullable=False)  # small, medium, large\n    duration = Column(String(10), nullable=False)  # short, medium, long\n    price = Column(Integer, nullable=False)\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Sets the price for walks based on dog size and duration.",
            "name": "WalkerRate"
        },
        {
            "classname": "Owner",
            "code": "class Owner(Base):\n    \"\"\"\n    description: Represents a dog owner who requests services.\n    \"\"\"\n\n    __tablename__ = 'owner'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String, nullable=False)\n    address = Column(String, nullable=False)\n    phone = Column(String, nullable=False)\n    email = Column(String, nullable=False)\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Represents a dog owner who requests services.",
            "name": "Owner"
        },
        {
            "classname": "PaymentInformation",
            "code": "class PaymentInformation(Base):\n    \"\"\"\n    description: Stores payment information for an owner.\n    \"\"\"\n\n    __tablename__ = 'payment_information'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    owner_id = Column(Integer, ForeignKey('owner.id'), nullable=False)\n    service = Column(String(10), nullable=False)  # Stripe, PayPal, Zelle\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Stores payment information for an owner.",
            "name": "PaymentInformation"
        },
        {
            "classname": "Dog",
            "code": "class Dog(Base):\n    \"\"\"\n    description: Represents a dog belonging to an owner.\n    \"\"\"\n\n    __tablename__ = 'dog'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    owner_id = Column(Integer, ForeignKey('owner.id'), nullable=False)\n    name = Column(String, nullable=False)\n    breed = Column(String, nullable=False)\n    size = Column(String(10), nullable=False)  # small, medium, large\n    notes = Column(String)\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Represents a dog belonging to an owner.",
            "name": "Dog"
        },
        {
            "classname": "WalkRequest",
            "code": "class WalkRequest(Base):\n    \"\"\"\n    description: A request made by an owner for a dog walk.\n    \"\"\"\n\n    __tablename__ = 'walk_request'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    owner_id = Column(Integer, ForeignKey('owner.id'), nullable=False)\n    date = Column(Date, nullable=False)\n    time = Column(String(10), nullable=False)\n    duration = Column(String(10), nullable=False)  # short, medium, long\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "A request made by an owner for a dog walk.",
            "name": "WalkRequest"
        },
        {
            "classname": "WalkSchedule",
            "code": "class WalkSchedule(Base):\n    \"\"\"\n    description: Schedules a walk after a walker accepts a request.\n    \"\"\"\n\n    __tablename__ = 'walk_schedule'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    walk_request_id = Column(Integer, ForeignKey('walk_request.id'), nullable=False)\n    walker_id = Column(Integer, ForeignKey('walker.id'), nullable=False)\n    status = Column(String(10), nullable=False)  # pending, confirmed, completed\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Schedules a walk after a walker accepts a request.",
            "name": "WalkSchedule"
        },
        {
            "classname": "WalkerReview",
            "code": "class WalkerReview(Base):\n    \"\"\"\n    description: Stores reviews given by owners about walkers.\n    \"\"\"\n\n    __tablename__ = 'walker_review'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    walk_schedule_id = Column(Integer, ForeignKey('walk_schedule.id'), nullable=False)\n    owner_id = Column(Integer, ForeignKey('owner.id'), nullable=False)\n    review_text = Column(String)\n    rating = Column(Integer, nullable=False)  # assuming 1 to 5\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Stores reviews given by owners about walkers.",
            "name": "WalkerReview"
        },
        {
            "classname": "WalkMonitoring",
            "code": "class WalkMonitoring(Base):\n    \"\"\"\n    description: Monitors the start and end of a walk.\n    \"\"\"\n\n    __tablename__ = 'walk_monitoring'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    walk_schedule_id = Column(Integer, ForeignKey('walk_schedule.id'), nullable=False)\n    start_time = Column(DateTime)\n    end_time = Column(DateTime)\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Monitors the start and end of a walk.",
            "name": "WalkMonitoring"
        },
        {
            "classname": "Payment",
            "code": "class Payment(Base):\n    \"\"\"\n    description: Records payments to walkers after a walk is completed.\n    \"\"\"\n\n    __tablename__ = 'payment'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    walk_schedule_id = Column(Integer, ForeignKey('walk_schedule.id'), nullable=False)\n    owner_id = Column(Integer, ForeignKey('owner.id'), nullable=False)\n    walker_id = Column(Integer, ForeignKey('walker.id'), nullable=False)\n    amount = Column(Integer, nullable=False)\n    payment_method = Column(String(10), nullable=False)  # Zelle, PayPal, Stripe\n    status = Column(String(10), nullable=False)  # pending, completed\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Records payments to walkers after a walk is completed.",
            "name": "Payment"
        },
        {
            "classname": "Administration",
            "code": "class Administration(Base):\n    \"\"\"\n    description: Administration data for the business.\n    \"\"\"\n\n    __tablename__ = 'administration'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    admin_name = Column(String, nullable=False)\n    created_date = Column(DateTime, default=datetime.now, nullable=False)\n    updated_date = Column(DateTime, default=datetime.now, onupdate=datetime.now, nullable=False)\n    created_by = Column(String, nullable=False)",
            "description": "Administration data for the business.",
            "name": "Administration"
        }
    ],
    "rules": [],
    "test_data": "from datetime import datetime, date\n\nwalker1 = Walker(first_name='John', last_name='Doe', postal_code='12345', phone='5551234567', email='john@example.com', max_dogs_per_walk=3, created_by='admin')\nwalker2 = Walker(first_name='Jane', last_name='Smith', postal_code='23456', phone='5552345678', email='jane@example.com', max_dogs_per_walk=2, created_by='admin')\nwalker3 = Walker(first_name='Bob', last_name='Brown', postal_code='34567', phone='5553456789', email='bob@example.com', max_dogs_per_walk=5, created_by='admin')\nwalker4 = Walker(first_name='Alice', last_name='Jones', postal_code='45678', phone='5554567890', email='alice@example.com', max_dogs_per_walk=4, created_by='admin')\n\nwalker_availability1 = WalkerAvailability(walker_id=1, day_of_week='Mon', time_of_day='morning', created_by='admin')\nwalker_availability2 = WalkerAvailability(walker_id=2, day_of_week='Tues', time_of_day='afternoon', created_by='admin')\nwalker_availability3 = WalkerAvailability(walker_id=3, day_of_week='Wed', time_of_day='morning', created_by='admin')\nwalker_availability4 = WalkerAvailability(walker_id=4, day_of_week='Thurs', time_of_day='afternoon', created_by='admin')\n\nwalker_rate1 = WalkerRate(walker_id=1, dog_size='small', duration='short', price=15, created_by='admin')\nwalker_rate2 = WalkerRate(walker_id=2, dog_size='medium', duration='medium', price=25, created_by='admin')\nwalker_rate3 = WalkerRate(walker_id=3, dog_size='large', duration='long', price=35, created_by='admin')\nwalker_rate4 = WalkerRate(walker_id=4, dog_size='small', duration='medium', price=20, created_by='admin')\n\nowner1 = Owner(name='Michael Green', address='123 Elm St', phone='1231231234', email='michaelg@example.com', created_by='admin')\nowner2 = Owner(name='Rachel White', address='234 Oak St', phone='2342342345', email='rachelw@example.com', created_by='admin')\nowner3 = Owner(name='Stacy Blue', address='345 Maple St', phone='3453453456', email='stacyb@example.com', created_by='admin')\nowner4 = Owner(name='Tom Black', address='456 Pine St', phone='4564564567', email='tom@example.com', created_by='admin')\n\npayment_info1 = PaymentInformation(owner_id=1, service='Stripe', created_by='admin')\npayment_info2 = PaymentInformation(owner_id=2, service='PayPal', created_by='admin')\npayment_info3 = PaymentInformation(owner_id=3, service='Zelle', created_by='admin')\npayment_info4 = PaymentInformation(owner_id=4, service='Stripe', created_by='admin')\n\ndog1 = Dog(owner_id=1, name='Fido', breed='Labrador', size='large', notes='Friendly', created_by='admin')\ndog2 = Dog(owner_id=2, name='Rex', breed='Bulldog', size='medium', notes='Likes to chew', created_by='admin')\ndog3 = Dog(owner_id=3, name='Bella', breed='Poodle', size='small', notes='Energetic', created_by='admin')\ndog4 = Dog(owner_id=4, name='Charlie', breed='Beagle', size='small', notes='Calm', created_by='admin')\n\nwalk_request1 = WalkRequest(owner_id=1, date=date(2024, 4, 1), time='morning', duration='short', created_by='admin')\nwalk_request2 = WalkRequest(owner_id=2, date=date(2024, 4, 2), time='afternoon', duration='medium', created_by='admin')\nwalk_request3 = WalkRequest(owner_id=3, date=date(2024, 4, 3), time='morning', duration='long', created_by='admin')\nwalk_request4 = WalkRequest(owner_id=4, date=date(2024, 4, 4), time='afternoon', duration='short', created_by='admin')\n\nwalk_schedule1 = WalkSchedule(walk_request_id=1, walker_id=1, status='confirmed', created_by='admin')\nwalk_schedule2 = WalkSchedule(walk_request_id=2, walker_id=2, status='pending', created_by='admin')\nwalk_schedule3 = WalkSchedule(walk_request_id=3, walker_id=3, status='completed', created_by='admin')\nwalk_schedule4 = WalkSchedule(walk_request_id=4, walker_id=4, status='confirmed', created_by='admin')\n\nwalker_review1 = WalkerReview(walk_schedule_id=3, owner_id=1, review_text='Great service!', rating=5, created_by='admin')\nwalker_review2 = WalkerReview(walk_schedule_id=2, owner_id=2, review_text='Too late!', rating=3, created_by='admin')\nwalker_review3 = WalkerReview(walk_schedule_id=1, owner_id=3, review_text='Good walk', rating=4, created_by='admin')\nwalker_review4 = WalkerReview(walk_schedule_id=4, owner_id=4, review_text='Not satisfied', rating=2, created_by='admin')\n\nwalk_monitoring1 = WalkMonitoring(walk_schedule_id=1, start_time=datetime(2024, 4, 1, 9, 0), end_time=datetime(2024, 4, 1, 10, 0), created_by='admin')\nwalk_monitoring2 = WalkMonitoring(walk_schedule_id=2, start_time=datetime(2024, 4, 2, 15, 0), end_time=datetime(2024, 4, 2, 16, 0), created_by='admin')\nwalk_monitoring3 = WalkMonitoring(walk_schedule_id=3, start_time=datetime(2024, 4, 3, 8, 0), end_time=datetime(2024, 4, 3, 10, 0), created_by='admin')\nwalk_monitoring4 = WalkMonitoring(walk_schedule_id=4, start_time=datetime(2024, 4, 4, 14, 0), end_time=datetime(2024, 4, 4, 15, 0), created_by='admin')\n\npayment1 = Payment(walk_schedule_id=1, owner_id=1, walker_id=1, amount=15, payment_method='Stripe', status='completed', created_by='admin')\npayment2 = Payment(walk_schedule_id=2, owner_id=2, walker_id=2, amount=25, payment_method='PayPal', status='pending', created_by='admin')\npayment3 = Payment(walk_schedule_id=3, owner_id=3, walker_id=3, amount=35, payment_method='Zelle', status='completed', created_by='admin')\npayment4 = Payment(walk_schedule_id=4, owner_id=4, walker_id=4, amount=20, payment_method='Stripe', status='completed', created_by='admin')\n\nadministration1 = Administration(admin_name='Admin1', created_by='system')\nadministration2 = Administration(admin_name='Admin2', created_by='system')\nadministration3 = Administration(admin_name='Admin3', created_by='system')\nadministration4 = Administration(admin_name='Admin4', created_by='system')",
    "name": "DogWalkBiz"
}